diff --git a/Exec.groovy b/Exec.groovy
index e77434c..8365710 100644
--- a/Exec.groovy
+++ b/Exec.groovy
@@ -16,9 +16,11 @@ class Exec {
         def withPath = "scripts/$command"
         def result = withPath.execute()
         def text = result.text
+        def status = result.exitValue()
         System.err.println("text=" + text)
         return "command=$command\r" +
                 "result=$result\r" +
+                "status=$status\r" +
                 "text=$text\r"
     }
 }
diff --git a/Gateway.groovy b/Gateway.groovy
index 4a280d8..b09fa17 100644
--- a/Gateway.groovy
+++ b/Gateway.groovy
@@ -1,5 +1,3 @@
-import groovy.json.*
-
 class Gateway {
 
     final request
@@ -27,7 +25,7 @@ class Gateway {
     }
 
     def transformedMerakiResponse() {
-        return JsonOutput.toJson(linker.transform(meraki.json(), meraki.command()))
+        return Json.from(linker.transform(meraki.json(), meraki.command()))
     }
 
     def infoRequest() {
diff --git a/Linker.groovy b/Linker.groovy
index 2f2b0aa..e6bd97c 100644
--- a/Linker.groovy
+++ b/Linker.groovy
@@ -1,5 +1,3 @@
-import groovy.json.*
-
 class Linker {
 
     final request
@@ -10,8 +8,8 @@ class Linker {
 
     static def jsonParamsFrom(request) {
         def params = firstValues(request.getParameterMap())
-        def json   = JsonOutput.toJson(params)
-        return fixBooleans(json)
+        def json   = Json.from(params)
+        return Json.fixBooleans(json)
     }
 
     static def firstValues(map) {
@@ -22,12 +20,6 @@ class Linker {
         return out
     }
 
-    static def fixBooleans(json) {
-        json = json.replaceAll('"true"','true')
-        json = json.replaceAll('"false"','false')
-        return json
-    }
-
     def linkTo(path) {
         def server = request.getServerName()
         def port = request.getServerPort()
@@ -96,11 +88,11 @@ class Linker {
     }
 
     def addCommandInfo(object, command) {
-        object.add(jsonKeyValue("command", command.replaceAll('"',"'")))
+        object.add(Json.keyValue("command", command.replaceAll('"',"'")))
     }
 
     def addDocInfo(object, command) {
-        object.add(jsonKeyValue("doc", Docs.shortTextforCommand(command)))
+        object.add(Json.keyValue("doc", Docs.shortTextforCommand(command)))
     }
 
     def addLinks(object, keys) {
@@ -110,11 +102,7 @@ class Linker {
     }
 
     def linkForKey(key) {
-        return jsonKeyValue(key, linkTo("${request.pathInfo}/$key"))
-    }
-
-    def jsonKeyValue(key, value) {
-        return new JsonSlurper().parseText("{ \"$key\" : \"$value\" }")
+        return Json.keyValue(key, linkTo("${request.pathInfo}/$key"))
     }
 
     def inputForParams() {
diff --git a/Meraki.groovy b/Meraki.groovy
index e378757..09de5cd 100644
--- a/Meraki.groovy
+++ b/Meraki.groovy
@@ -1,5 +1,3 @@
-import groovy.json.*
-
 class Meraki {
 
     final path
@@ -38,13 +36,26 @@ class Meraki {
     def json() {
         def result = exec()
         try {
-            return new JsonSlurper().parseText(result)
+            return toJson(result)
         } catch (e) {
             def errorPage = result.replaceAll("page", "page ($path)")
             throw new RuntimeException(errorPage, e)
         }
     }
 
+    def toJson(text) {
+        def size = text.length()
+        def status = text.substring(size - 4)
+        def rest   = text.substring(0,size - 4)
+        def json   = Json.parse(rest)
+        System.err.println("json=<<<<<" + json + ">>>>>")
+        System.err.println("class=<<<<<" + json.getClass() + ">>>>>")
+//        def dup = new ArrayList()
+//        dup.addAll(json)
+//        dup = addStatusInfo(dup,status)
+        return json
+    }
+
     def exec() {
         def command = command()
         System.err.println("command=" + command)
@@ -54,4 +65,8 @@ class Meraki {
         return text
     }
 
+    def addStatusInfo(object, status) {
+        object.add(Json.keyValue("status", status))
+    }
+
 }
diff --git a/scripts/GET b/scripts/GET
index bdd8d68..5f32bd0 100755
--- a/scripts/GET
+++ b/scripts/GET
@@ -1 +1 @@
-curl -L -H "X-Cisco-Meraki-API-Key: $2" -H'Content-Type: application/json' https://n124.meraki.com/api/v0/$1
+curl -L -H "X-Cisco-Meraki-API-Key: $2" -H'Content-Type: application/json' https://n124.meraki.com/api/v0/$1
\ No newline at end of file
diff --git a/scripts/POST b/scripts/POST
index 7f648dd..fd6dd13 100755
--- a/scripts/POST
+++ b/scripts/POST
@@ -1 +1 @@
-curl -L -H "X-Cisco-Meraki-API-Key: $2" -X POST -H'Content-Type: application/json' --data-binary $3 https://n124.meraki.com/api/v0/$1
+curl --write-out "%{http_code}" -L -H "X-Cisco-Meraki-API-Key: $2" -X POST -H'Content-Type: application/json' --data-binary $3 https://n124.meraki.com/api/v0/$1
\ No newline at end of file
diff --git a/scripts/TEST b/scripts/TEST
index 16fbd9e..2cd93f8 100755
--- a/scripts/TEST
+++ b/scripts/TEST
@@ -1,4 +1,4 @@
 echo $1 $2 $3
 echo '1=' $1
 echo '2=' $2
-echo '3=' $3
+echo '3=' $3
\ No newline at end of file
